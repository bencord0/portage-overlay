user nginx nginx;
worker_processes 1;

error_log /var/log/nginx/error_log info;

events {
    worker_connections 1024;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main
        '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '"$gzip_ratio"';

    client_header_timeout 10m;
    client_body_timeout 10m;
    send_timeout 10m;

    connection_pool_size 256;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 16k;
    request_pool_size 4k;

    gzip off;

    output_buffers 1 32k;
    postpone_output 1460;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    keepalive_timeout 75 20;

    ignore_invalid_headers on;

    index index.html;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream backend {
        server localhost:3000 fail_timeout=0;
    }

    upstream streaming {
        server localhost:4000 fail_timeout=0;
    }

    server {
        listen 80;
        listen 443 ssl;

        ssl_certificate /etc/nginx/server.pem;
        ssl_certificate_key /etc/nginx/server.key;

        chunked_transfer_encoding on;
        client_max_body_size 0;

        root /usr/share/mastodon/public;

        location / {
                try_files $uri @proxy;
        }

        location /sw.js {
                try_files $uri =404;
        }

        location ~ ^/assets/ {
                try_files $uri =404;
        }

        location ~ ^/avatars/ {
                try_files $uri =404;
        }

        location ~ ^/emoji/ {
                try_files $uri =404;
        }

        location ~ ^/headers/ {
                try_files $uri =404;
        }

        location ~ ^/packs/ {
                try_files $uri =404;
        }

        location ~ ^/shortcuts/ {
                try_files $uri =404;
        }

        location ~ ^/sounds/ {
                try_files $uri =404;
        }

        location ^~ /api/v1/streaming {
                proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Proxy "";

                proxy_pass http://streaming;
                proxy_buffering off;
                proxy_redirect off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;

                tcp_nodelay on;
        }

        location @proxy {
                proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Proxy "";
                proxy_pass_header Server;

                proxy_pass http://backend;
                proxy_buffering on;
                proxy_redirect off;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;

                tcp_nodelay on;
        }

	error_page 404 500 501 502 503 504 /500.html;
    }
}
